{
  "dxt_version": "0.1",
  "name": "scrapling-fetch",
  "display_name": "Scrapling Fetch",
  "version": "1.0.0",
  "description": "Access text content from bot-protected websites. Fetches HTML/markdown from sites with anti-automation measures using Scrapling.",
  "long_description": "",
  "author": {
    "name": "cyberchitta"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cyberchitta/scrapling-fetch-mcp"
  },
  "homepage": "https://github.com/cyberchitta/scrapling-fetch-mcp",
  "screenshots": [],
  "server": {
    "type": "python",
    "entry_point": "",
    "mcp_config": {
      "command": "uvx",
      "args": [
        "scrapling-fetch-mcp"
      ]
    }
  },
  "tools": [
    {
      "name": "s-fetch-page",
      "description": "Fetches a complete web page with pagination support. Retrieves content from websites with bot-detection avoidance. For best performance, start with 'basic' mode (fastest), then only escalate to 'stealth' or 'max-stealth' modes if basic mode fails. Content is returned as 'METADATA: {json}\\n\\n[content]' where metadata includes length information and truncation status."
    },
    {
      "name": "s-fetch-pattern",
      "description": "Extracts content matching regex patterns from web pages. Retrieves specific content from websites with bot-detection avoidance. For best performance, start with 'basic' mode (fastest), then only escalate to 'stealth' or 'max-stealth' modes if basic mode fails. Returns matched content as 'METADATA: {json}\\n\\n[content]' where metadata includes match statistics and truncation information. Each matched content chunk is delimited with '॥๛॥' and prefixed with '[Position: start-end]' indicating its byte position in the original document, allowing targeted follow-up requests with s-fetch-page using specific start_index values."
    }
  ],
  "prompts": [],
  "tools_generated": true,
  "keywords": [
    "scrapling",
    "Web Services",
    "fetch"
  ],
  "license": "Apache 2"
}