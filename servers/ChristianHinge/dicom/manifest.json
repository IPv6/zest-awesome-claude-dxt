{
  "dxt_version": "0.1",
  "name": "dicom",
  "display_name": "DICOM Model Context Protocol",
  "version": "1.0.0",
  "description": "An MCP server to query and retrieve medical images and for parsing and reading dicom-encapsulated documents (pdf etc.).",
  "long_description": "",
  "author": {
    "name": "ChristianHinge",
    "url": "https://github.com/ChristianHinge"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ChristianHinge/dicom-mcp"
  },
  "homepage": "https://github.com/ChristianHinge/dicom-mcp",
  "screenshots": [],
  "server": {
    "type": "python",
    "entry_point": "",
    "mcp_config": {
      "command": "uvx",
      "args": [
        "--from",
        "git+https://github.com/ChristianHinge/dicom-mcp",
        "dicom-mcp",
        "${CONFIG_PATH}"
      ]
    }
  },
  "tools": [
    {
      "name": "list_dicom_nodes",
      "description": "Lists all configured DICOM nodes and calling AE titles."
    },
    {
      "name": "switch_dicom_node",
      "description": "Switches to a different configured DICOM node."
    },
    {
      "name": "switch_calling_aet",
      "description": "Switches to a different configured calling AE title."
    },
    {
      "name": "verify_connection",
      "description": "Tests connectivity to the configured DICOM node using C-ECHO."
    },
    {
      "name": "query_patients",
      "description": "Search for patients matching specified criteria."
    },
    {
      "name": "query_studies",
      "description": "Search for studies matching specified criteria."
    },
    {
      "name": "query_series",
      "description": "Search for series within a study."
    },
    {
      "name": "query_instances",
      "description": "Search for instances within a series."
    },
    {
      "name": "get_attribute_presets",
      "description": "Lists available attribute presets for queries."
    },
    {
      "name": "retrieve_instance",
      "description": "Retrieves a specific DICOM instance and saves it to the local filesystem."
    },
    {
      "name": "extract_pdf_text_from_dicom",
      "description": "Retrieves a DICOM instance containing an encapsulated PDF and extracts its text content."
    }
  ],
  "prompts": [
    {
      "name": "List available DICOM nodes",
      "description": "Retrieve and display all configured DICOM nodes and calling AE titles.",
      "text": "list_dicom_nodes()"
    }
  ],
  "tools_generated": true,
  "keywords": [
    "DICOM",
    "Professional Apps",
    "Medical Imaging",
    "PDF Extraction",
    "AI"
  ],
  "license": "MIT",
  "user_config": {
    "CONFIG_PATH": {
      "type": "directory",
      "description": "Path to the configuration file",
      "sensitive": false,
      "title": "CONFIG_PATH",
      "required": true
    }
  }
}