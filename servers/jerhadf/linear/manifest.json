{
  "dxt_version": "0.1",
  "name": "linear",
  "display_name": "Linear",
  "version": "1.0.0",
  "description": "Allows LLM to interact with Linear's API for project management, including searching, creating, and updating issues.",
  "long_description": "",
  "author": {
    "name": "jerhadf"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jerhadf/linear-mcp-server"
  },
  "homepage": "https://github.com/jerhadf/linear-mcp-server",
  "screenshots": [],
  "server": {
    "type": "node",
    "entry_point": "",
    "mcp_config": {
      "command": "npx",
      "args": [
        "-y",
        "linear-mcp-server"
      ],
      "env": {
        "LINEAR_API_KEY": "${user_config.LINEAR_API_KEY}"
      }
    }
  },
  "tools": [
    {
      "name": "linear_create_issue",
      "description": "Creates a new Linear issue with specified details. Use this to create tickets for tasks, bugs, or feature requests. Returns the created issue's identifier and URL. Required fields are title and teamId, with optional description, priority (0-4, where 0 is no priority and 1 is urgent), and status."
    },
    {
      "name": "linear_update_issue",
      "description": "Updates an existing Linear issue's properties. Use this to modify issue details like title, description, priority, or status. Requires the issue ID and accepts any combination of updatable fields. Returns the updated issue's identifier and URL."
    },
    {
      "name": "linear_search_issues",
      "description": "Searches Linear issues using flexible criteria. Supports filtering by any combination of: title/description text, team, status, assignee, labels, priority (1=urgent, 2=high, 3=normal, 4=low), and estimate. Returns up to 10 issues by default (configurable via limit)."
    },
    {
      "name": "linear_get_user_issues",
      "description": "Retrieves issues assigned to a specific user or the authenticated user if no userId is provided. Returns issues sorted by last updated, including priority, status, and other metadata. Useful for finding a user's workload or tracking assigned tasks."
    },
    {
      "name": "linear_add_comment",
      "description": "Adds a comment to an existing Linear issue. Supports markdown formatting in the comment body. Can optionally specify a custom user name and avatar for the comment. Returns the created comment's details including its URL."
    }
  ],
  "prompts": [
    {
      "name": "Show me all my high-priority issues",
      "description": "Execute the search_issues tool and/or linear-user:///{userId}/assigned to find issues assigned to the user with priority 1",
      "text": "Show me all my high-priority issues"
    },
    {
      "name": "Create a bug report",
      "description": "Use create_issue to create a new high-priority issue with appropriate details and status tracking.",
      "text": "Based on what I've told you about this bug already, make a bug report for the authentication system"
    },
    {
      "name": "Find all in-progress frontend tasks",
      "description": "Use search_issues to locate frontend-related issues with in progress status.",
      "text": "Find all in progress frontend tasks"
    },
    {
      "name": "Get summary of recent updates",
      "description": "Use search_issues to identify relevant issue(s) and fetch the issue details.",
      "text": "Give me a summary of recent updates on the issues for mobile app development"
    },
    {
      "name": "Analyze current workload for the mobile team",
      "description": "Combine linear-team:///{teamId}/issues and search_issues to analyze issue distribution and priorities across the mobile team.",
      "text": "What's the current workload for the mobile team?"
    }
  ],
  "tools_generated": true,
  "keywords": [
    "issue tracking",
    "LLM",
    "Productivity",
    "linear"
  ],
  "license": "MIT",
  "user_config": {
    "LINEAR_API_KEY": {
      "type": "string",
      "description": "Your Linear API key to authenticate requests to the Linear API.",
      "sensitive": true,
      "title": "LINEAR_API_KEY",
      "required": true
    }
  }
}